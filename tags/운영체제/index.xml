<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>운영체제 on</title><link>https://annyeong.me/tags/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</link><description>Recent content in 운영체제 on</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><atom:link href="https://annyeong.me/tags/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>멀티태스킹</title><link>https://annyeong.me/notes/%EB%A9%80%ED%8B%B0%ED%83%9C%EC%8A%A4%ED%82%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EB%A9%80%ED%8B%B0%ED%83%9C%EC%8A%A4%ED%82%B9/</guid><description>스케줄링 방식에 있어, 제어권을 누가 갖느냐로 크게 둘로 나눈다.
협력형 멀티태스킹 Cooperative multitasking. 혹은 비선점(non-preemptive) 멀티태스킹으로 부르기도 한다.
Windows 3.1, Mac OS 9 등 고전 운영체제에서 사용했던 방법으로 운용프로그램이 자발적으로 제어권을 반환하는 방법.</description></item><item><title>운영체제</title><link>https://annyeong.me/notes/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</guid><description>“운영체제: 아주 쉬운 세 가지 이야기”에서는 운영체제의 근간을 세 가지 개념으로 나눈다.
가상화 동시성 (번역본에서는 병행성으로 번역되었다.) 영속성 [[프로세스]] [[멀티태스킹]] [[동시성을 다루는 방법]] 참고 리눅스 및 커널프로그래밍 - 금오공과대학교 | KOCW 공개 강의 국민대학교 OCW 반효경, 운영체제, 이화여자대학교, 2014 ostep-translations/korean at master · remzi-arpacidusseau/ostep-translations · GitHub</description></item><item><title>유닉스 신호</title><link>https://annyeong.me/notes/%EC%9C%A0%EB%8B%89%EC%8A%A4-%EC%8B%A0%ED%98%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EC%9C%A0%EB%8B%89%EC%8A%A4-%EC%8B%A0%ED%98%B8/</guid><description>유닉스 신호를 사용하는 리눅스, macOS, BSD 계열 OS에 한정한 이야기이다.
각각의 프로세스들은 서로와, 그리고 운영체제와 유닉스 신호(unix signal)을 이용하여 소통한다. CLI에서 프로그램을 쓰다가 Ctrl+C를 눌러 종료할 때에도 유닉스 신호가 전달된다.</description></item></channel></rss>