<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>프로그래밍_언어 on</title><link>https://annyeong.me/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4/</link><description>Recent content in 프로그래밍_언어 on</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><atom:link href="https://annyeong.me/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4/index.xml" rel="self" type="application/rss+xml"/><item><title>다형성을 달성하는 방법</title><link>https://annyeong.me/notes/%EB%8B%A4%ED%98%95%EC%84%B1%EC%9D%84-%EB%8B%AC%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EB%8B%A4%ED%98%95%EC%84%B1%EC%9D%84-%EB%8B%AC%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid><description> 9가지 프로그래밍 언어로 배우는 다형성</description></item><item><title>런타임</title><link>https://annyeong.me/notes/%EB%9F%B0%ED%83%80%EC%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EB%9F%B0%ED%83%80%EC%9E%84/</guid><description>C언어 The C Runtime Initialization 러스트 비용 없는 추상화, GC 없는 메모리 안전성을 목표로 하는 만큼 런타임이 굉장히 작으나 없지는 않다.</description></item><item><title>부수 작용</title><link>https://annyeong.me/notes/%EB%B6%80%EC%88%98-%EC%9E%91%EC%9A%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EB%B6%80%EC%88%98-%EC%9E%91%EC%9A%A9/</guid><description>side effect. 보통은 부작용이라고 부른다. 부수 작용, 부수 효과, 부차 작용, 부차 효과로 부르기도 한다.
본래 부작용은 副作用, 말 그대로 어떤 작용에 따라오는 부수적, 부차적인 작용을 일컫는다.</description></item><item><title>연산자 표기법</title><link>https://annyeong.me/notes/%EC%97%B0%EC%82%B0%EC%9E%90-%ED%91%9C%EA%B8%B0%EB%B2%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EC%97%B0%EC%82%B0%EC%9E%90-%ED%91%9C%EA%B8%B0%EB%B2%95/</guid><description>연산자 컴퓨터 과학에서 &amp;ldquo;연산자는 무엇이다&amp;rdquo; 라고 명쾌하게 널리 받아들여지는 정의는 없는 것 같다.
일반적인 인식으로는 연산자는 아래와 같은 것들을 칭한다:</description></item><item><title>인덱스는 몇부터 시작해야할까</title><link>https://annyeong.me/notes/%EC%9D%B8%EB%8D%B1%EC%8A%A4%EB%8A%94-%EB%AA%87%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EC%9D%B8%EB%8D%B1%EC%8A%A4%EB%8A%94-%EB%AA%87%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C/</guid><description>1부터 시작하는 언어 0부터 시작하는 언어 왜 0부터 시작하는가?
그 외의 언어</description></item><item><title>점진적 타이핑</title><link>https://annyeong.me/notes/%EC%A0%90%EC%A7%84%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EC%A0%90%EC%A7%84%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91/</guid><description>Gradual typing.
어떤 타입이나 표현식은 컴파일 타임에, 어떤 표현식은 런타임에 검증하는 타입 시스템. 정적 언어의 컴파일 타임 검증과 동적 언어의 빠른 이터레이션을 둘 다 누릴 수 있다.</description></item><item><title>참조 투명성</title><link>https://annyeong.me/notes/%EC%B0%B8%EC%A1%B0-%ED%88%AC%EB%AA%85%EC%84%B1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%EC%B0%B8%EC%A1%B0-%ED%88%AC%EB%AA%85%EC%84%B1/</guid><description>어떤 표현식이나 함수가, 그에 대응하는 값으로 바꾸었을 때 프로그램의 동작이 바뀌지 않으면, 참조 투명성(referential transparency)을 만족한다고 할 수 있다. 참조 투명성을 만족하려면 [[부수 작용]]이 없어야 한다.</description></item><item><title>함수형 언어</title><link>https://annyeong.me/notes/%ED%95%A8%EC%88%98%ED%98%95-%EC%96%B8%EC%96%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://annyeong.me/notes/%ED%95%A8%EC%88%98%ED%98%95-%EC%96%B8%EC%96%B4/</guid><description>함수형 언어란 순 함수로만 이루어져야하는가? 함수를 1급 객체로 취급해야하는가? 불변성을 지녀야하는가? 지연 연산을 지원해야하는가?</description></item></channel></rss>